"""Possible job status"""
enum Status{
  AVAILABLE
  DONE
  FAILED
  RUNNING
  SCHEDULE
}

"""Job computed by an user"""
type Job {
  """Unique identifier"""
  id: Int!
  """compute Properties"""
  property: Property!
  """Input to perform the computation"""
  settings: String!
  """Job status"""
  status: Status!
  """User who es executing the job."""
  user: String
  """Timestamp=datatime.timestamp() """
  schedule_time: Float
  """Timestamp=datatime.timestamp()"""
  completion_time: Float
  """platform where the job was run: platform.platform()"""
  platform: String
}

type Property {
  """Unique identifier"""
  id: Int!
  """Name to which the property belongs. e.g. Theory level"""
  collection_name: String!
  """Smile representing the molecule"""
  smile: String!
  """Optimize geometry"""
  geometry: String
  """Properties values as JSON"""
  data: String
  """Input with which the property was computed encoded as JSON"""
  input: String
  }

type Query {
  jobs(status: Status!) : [Job!]
  job(status: Status!): Job
  properties(collection_name: String!): [Property!]
  property(smile: String!, collection_name: String!): Property
}